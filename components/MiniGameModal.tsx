
import React, { useState, useEffect } from 'react';
import Modal from './Modal';
import { MiniGameLink } from '../types';

interface MiniGameModalProps {
  isOpen: boolean;
  onClose: () => void;
  onSave: (game: MiniGameLink) => void;
  existingGame: MiniGameLink | null;
}

const MiniGameModal: React.FC<MiniGameModalProps> = ({ isOpen, onClose, onSave, existingGame }) => {
  const [name, setName] = useState('');
  const [url, setUrl] = useState('');
  const [id, setId] = useState('');
  const [error, setError] = useState('');

  useEffect(() => {
    if (existingGame) {
      setName(existingGame.name);
      setUrl(existingGame.url);
      setId(existingGame.id);
    } else {
      setName('');
      setUrl('');
      setId(''); // For new games, id will be generated by parent
    }
    setError('');
  }, [existingGame, isOpen]);

  const handleSave = () => {
    if (!name.trim() || !url.trim()) {
      setError("Nama dan URL pautan tidak boleh kosong.");
      return;
    }
    try {
      new URL(url); // Validate URL
    } catch (_) {
      setError("Format URL tidak sah.");
      return;
    }
    setError('');
    onSave({ id: id || crypto.randomUUID(), name, url });
  };
  
  const handleClose = () => {
    // Reset form fields on close
    setName('');
    setUrl('');
    setId('');
    setError('');
    onClose();
  };


  return (
    <Modal isOpen={isOpen} onClose={handleClose} title={existingGame ? "Edit Pautan Mini Game" : "Tambah Pautan Mini Game Baru"}>
      <input type="hidden" id="mini-game-id" value={id} />
      <div className="mb-3">
        <label htmlFor="mini-game-name" className="block text-sm font-medium text-gray-700 mb-1">Nama Pautan</label>
        <input
          type="text"
          id="mini-game-name"
          value={name}
          onChange={(e) => setName(e.target.value)}
          className="w-full p-2 border border-gray-300 rounded-md focus:ring-primary focus:border-primary"
          placeholder="Cth: Kuiz Tajwid Seru"
        />
      </div>
      <div className="mb-4">
        <label htmlFor="mini-game-url" className="block text-sm font-medium text-gray-700 mb-1">URL Pautan</label>
        <input
          type="url"
          id="mini-game-url"
          value={url}
          onChange={(e) => setUrl(e.target.value)}
          className="w-full p-2 border border-gray-300 rounded-md focus:ring-primary focus:border-primary"
          placeholder="https://contoh.com/kuiz"
        />
      </div>
      {error && <p id="mini-game-modal-error" className="text-red-500 text-sm mb-3">{error}</p>}
      <div className="flex justify-end space-x-2">
        <button
          id="mini-game-modal-cancel"
          onClick={handleClose}
          className="bg-gray-200 text-gray-700 px-4 py-2 rounded-md hover:bg-gray-300 text-sm"
        >
          Batal
        </button>
        <button
          id="mini-game-modal-save"
          onClick={handleSave}
          className="bg-primary text-white px-4 py-2 rounded-md hover:bg-secondary text-sm"
        >
          Simpan
        </button>
      </div>
    </Modal>
  );
};

export default MiniGameModal;
    